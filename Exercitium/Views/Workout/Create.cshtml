@using Exercitium.ViewModels;
@model WorkoutCreateViewModel

<h2>Create Workout</h2>

@using (Html.BeginForm("Create", "Workout"))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Id)
        @Html.TextBoxFor(m => m.Id, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Type)
        @Html.TextBoxFor(m => m.Type, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DateTime)
        @Html.TextBoxFor(m => m.DateTime, new { @class = "form-control", @type = "date" })
    </div>

    <h4>Exercises</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Exercise</th>
                <th>Sets</th>
                <th>Reps</th>
                <th>Weight</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Exercises.Count; i++)
            {
                <tr>
                    <td>
                        @Html.HiddenFor(m => m.Exercises[i].Id)
                        @Html.DisplayFor(m => m.Exercises[i].ExerciseName)
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.Exercises[i].Sets, new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.Exercises[i].Reps, new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.Exercises[i].Weight, new { @class = "form-control" })
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button type="submit" class="btn btn-primary">Create</button>
}
